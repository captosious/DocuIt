@page "/Profile"
@using DocuitWeb.Models
@using DocuitWeb.Data
@using System;
@using System.Collections.Generic;
@using System.IO;

@using Microsoft.AspNetCore.Components.Forms

@inject IStringLocalizer<Profile> Localizer
@inject UserService UserService

<br>
<div class="container text-left">
    <h3 class="PageHeader">@Localizer["Title"]</h3>
    <br>
    <input type="hidden" name="CompanyId" @bind="@user.CompanyId" />
    @if (string.IsNullOrEmpty(imagesrc))
    {
        <img class="avatar_profile" src="/img/null_avatar.jpg" />
    }
    else
    {
        <img class="avatar_profile" src="@imagesrc" />
    }

    <InputFile OnChange="@OnInputFileChange" id="input-image" />

    @*<form id="pepe" name="pepe" enctype="multipart/form-data" method="post" onsubmit="OnClickPostPicture">
            <input asp-for="FileUpload.FormFile" type="file" name="image">
            <br />
            <input type="text" value="@user.CompanyId" name="CompanyId" hidden="hidden" />
            <input type="text" value="@user.UserId" name="UserId" hidden="hidden" />

            <input asp-page-handler="Upload" class="btn" type="submit" value="Upload" />
        </form>*@

    <div class="row">
        <div class="col-4" style="text-align:right"><b>@Localizer["Name"]</b></div>
        <div class="col-8"><input type="text" name="FiscalId" @bind="@user.Name" size="15" /></div>
    </div>
    <div class="row">
        <div class="col-4" style="text-align:right"><b>@Localizer["FamilyName"]</b></div>
        <div class="col-8"><input type="text" name="Name" @bind="@user.FamilyName" size="25" /></div>
    </div>
    <div class="row">
        <div class="col-4" style="text-align:right"><b>@Localizer["Email"]</b></div>
        <div class="col-8"><input type="text" name="Email" @bind="@user.Email" size="25" /></div>
    </div>
    <div class="row">
        <div class="col-4" style="text-align:right"><b>@Localizer["Username"]</b></div>
        <div class="col-8"><input type="text" disabled="disabled" @bind="@user.Username" size="30" /></div>
    </div>
    <div class="row">
        <div class="col-4" style="text-align:right"><b>@Localizer["Password"]</b></div>
        <div class="col-8"><input type="text" name="Town" @bind="@user.Password" size="15" /></div>
    </div>
    <div class="row">
        <div class="col-4" style="text-align:right"><b>@Localizer["PasswordNew"]</b></div>
        <div class="col-8"><input type="text" name="Town" @bind="@user.Password" size="15" /></div>
    </div>
    <div class="row">
        <div class="col-4" style="text-align:right"><b>@Localizer["SecurityID"]</b></div>
        <div class="col-8">
            <select id="security_select" disabled="disabled" name="security_select" @bind="@user.SecurityId">
                @foreach (Security security in securities)
                {
                    <option value="@security.SecurityId">@security.Description</option>
                }
            </select>
        </div>
    </div>
    <div class="row">
        <div class="col-4" style="text-align:right"><b>@Localizer["CreatedOn"]</b></div>
        <div class="col-8"><input type="text" name="ZipCode" @bind="@user.CreationTime" size="5" /></div>
    </div>
    <div class="row" style="margin-top: 15px;text-align: center">
        <div class="col" style="text-align:center">
            <button class="btn btn_general btn-success" @onclick="OnClickPostPicture">Guarda Pic</button>
            <button class="btn btn_general btn-success" @onclick="OnClickPutButton">@SharedLocalizer["MSG_SAVE"]</button>
        </div>
    </div>
</div>

@code{
    DocuitWeb.Models.User user = new DocuitWeb.Models.User();
    IEnumerable<Security> securities = new List<Security>();
    string newPassword = "";
    string base64String = "";
    string imagesrc = "";

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {

    }

    protected override async Task OnInitializedAsync()
    {
        myBlocker.Show();

        user.CompanyId = accessService.MyLogin.CompanyId;
        user.UserId = accessService.MyLogin.UserId;

        user = await UserService.FetchAsync(user);

        if (user.Image!=null)
        {
            base64String = Convert.ToBase64String(user.Image, 0, user.Image.Length);
            imagesrc = "data:image/jpg;base64," + base64String;
        }
        else
        {
            base64String = "";
            imagesrc = "";
        }


        myBlocker.Hide();
    }

    private async void OnClickPutButton()
    {
        int result;

        myBlocker.Show();
        result = await UserService.PutAsync(user);
        myBlocker.Hide();
        if (result != 0)
        {
            toastService.ShowError(@SharedLocalizer["OP_FAIL"]);
        }
        else
        {
            toastService.ShowSuccess(@SharedLocalizer["OP_OK"]);
        }
    }

    private async void OnClickPostPicture()
    {
        int result = 0;
        string filePath = "/Users/pedrorio/Pictures/kong_avatar.jpg";
        string fileGUID = Guid.NewGuid().ToString();
        MultipartFormDataContent multipartForm = new MultipartFormDataContent();
        FileStream fileStream = new FileStream(filePath, FileMode.Open);

        myBlocker.Show();

        multipartForm.Add(new StringContent(user.CompanyId.ToString()), "CompanyId");
        multipartForm.Add(new StringContent(user.UserId.ToString()), "UserId");
        multipartForm.Add(new StreamContent(fileStream, (int)fileStream.Length), "image");

        result = await UserService.SetPhotoAsync(multipartForm);
        myBlocker.Hide();
        if (result != 0)
        {
            toastService.ShowError(@SharedLocalizer["OP_FAIL"]);
        }
        else
        {
            toastService.ShowSuccess(@SharedLocalizer["OP_OK"]);
        }
    }
}
