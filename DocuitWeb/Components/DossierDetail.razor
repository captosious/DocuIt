@page "/DossierDetail"
@using DocuitWeb.Data

@inject IStringLocalizer<DossierDetail> Localizer
@inject ProjectService ProjectService
@inject DossierService DossierService
@inject DossierElementService DossierElementService


    <h3 class="">@Localizer["MSG001"]</h3>
    <div>
        @Localizer["ProjectText"] &nbsp;
        <b>@Localizer["ReferenceID"]</b>&nbsp;@myProject.ReferenceId &nbsp; @Localizer["Name"]: &nbsp; @myProject.Name
    </div>
    <table class="table table-hover table-condensed table-list-general table-sm">
        <thead class="" style="">
            <tr>
                <th>Data</th>
                <th>Name</th>
                <th>ReferenceId</th>
                <th>Descripció</th>
            </tr>
        </thead>
        <tbody>
            @{
                if (dossiers != null)
                {
                    foreach (Dossier dossier in dossiers)
                    {
                        <tr class="clickable-row" role="button" @onclick="@(() => RowClicking(dossier))">
                            <td>@dossier.CreationTime.ToString("d")</td>
                            <td>@dossier.Name</td>
                            <td>@dossier.ReferenceId</td>
                            <td>@dossier.Name</td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
    <br />

@{
    if (showDossierElementDetail)
    {
        <div class="row">
                <div class="col-4">Referencia</div>
                <div class="col-8">@dossier.ReferenceId</div>
        </div>

        <CascadingValue Value="dossier">
            <DossierElementList></DossierElementList>
        </CascadingValue>
    }
}

@code
    {
    [CascadingParameter]
    public Project myProject { get; set; }
    [CascadingParameter]
    public IEnumerable<Dossier> dossiers { get; set; }

    private Dossier dossier { get; set; }
    private bool showDossierElementDetail = false;

    protected override async Task OnParametersSetAsync()
    {
        @*myBlocker.Show();
            dossiers = await DossierService.FetchGetAllAsync(myProject);
            if (dossiers == null) { toastService.ShowError(@SharedLocalizer["OP_FAIL"]); }

            myBlocker.Hide();*@
    }

    protected override async Task OnInitializedAsync()
    {

    }

    void RowClicking(Dossier dossier)
    {
        this.dossier = dossier;
        showDossierElementDetail = true;
        //OnUserClickTable.InvokeAsync(project);

    }

    private async void OnClickSaveButton()
    {
        myBlocker.Show();
        myProject = await ProjectService.PutAsync(myProject);
        myBlocker.Hide();

        if (myProject == null)
        {
            toastService.ShowError(@SharedLocalizer["OP_FAIL"]);
        }
        else
        {
            toastService.ShowSuccess(@SharedLocalizer["OP_OK"]);
        }
    }
}

